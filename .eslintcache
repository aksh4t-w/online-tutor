[{"C:\\Coding\\Full Stack\\online-tutor\\src\\index.js":"1","C:\\Coding\\Full Stack\\online-tutor\\src\\reportWebVitals.js":"2","C:\\Coding\\Full Stack\\online-tutor\\src\\App.js":"3","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\Login.js":"4","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\SignUpModal.js":"5","C:\\Coding\\Full Stack\\online-tutor\\src\\firebase.js":"6","C:\\Coding\\Full Stack\\online-tutor\\src\\contexts\\ContextProvider.js":"7","C:\\Coding\\Full Stack\\online-tutor\\src\\contexts\\reducer.js":"8","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\Dashboard.js":"9","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\AddMaterial.js":"10","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\AdminModal.js":"11","C:\\Coding\\Full Stack\\online-tutor\\src\\axios.js":"12","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\googleSignup.js":"13"},{"size":718,"mtime":1612202635361,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":278,"mtime":1611945942452,"results":"17","hashOfConfig":"15"},{"size":3109,"mtime":1620851356114,"results":"18","hashOfConfig":"15"},{"size":3130,"mtime":1612799558809,"results":"19","hashOfConfig":"15"},{"size":702,"mtime":1612873840189,"results":"20","hashOfConfig":"15"},{"size":407,"mtime":1612179971404,"results":"21","hashOfConfig":"15"},{"size":410,"mtime":1612179375599,"results":"22","hashOfConfig":"15"},{"size":5474,"mtime":1621114037333,"results":"23","hashOfConfig":"15"},{"size":4957,"mtime":1621168944646,"results":"24","hashOfConfig":"15"},{"size":2340,"mtime":1612625094513,"results":"25","hashOfConfig":"15"},{"size":221,"mtime":1612624845074,"results":"26","hashOfConfig":"15"},{"size":794,"mtime":1612769002047,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"j37bdd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Coding\\Full Stack\\online-tutor\\src\\index.js",[],["61","62"],"C:\\Coding\\Full Stack\\online-tutor\\src\\reportWebVitals.js",[],"C:\\Coding\\Full Stack\\online-tutor\\src\\App.js",["63","64"],"import './App.css';\nimport Login from './components/Login';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Login />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\Login.js",["65","66"],"import React, { lazy, useEffect, useState } from \"react\";\r\nimport { Suspense } from \"react\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport \"./Login.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport SignUp from \"./SignUpModal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport { useContextProvider } from \"../contexts/ContextProvider\";\r\n// import Dashboard from './Dashboard';\r\nimport { googleSignup } from \"./googleSignup\";\r\n\r\nconst Dashboard = lazy(() => import(\"./Dashboard\"));\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n\r\n  const [{ user }, dispatch] = useContextProvider();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  // const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        console.log(\"User logged in: \", user);\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user,\r\n        });\r\n      } else console.log(\"Login to continue.\");\r\n    });\r\n  }, []);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((cred) => {\r\n        // cred.user\r\n      })\r\n      .catch((err) => setError(err));\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Link to=\"/\">\r\n        <img\r\n          className=\"login__logo\"\r\n          src=\"https://www.uwindsor.ca/international-student-centre/sites/uwindsor.ca.international-student-centre/files/styles/page_hero/public/blackboard.jpg?itok=dAtm8ORY\"\r\n          alt=\"OT\"\r\n        />\r\n      </Link>\r\n\r\n      {!user ? (\r\n        <div className=\"login__container\">\r\n          <h1>Login</h1>\r\n\r\n          <Form>\r\n            <Form.Group controlId=\"formGroupEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n              />\r\n            </Form.Group>\r\n            {error ? <p>{error.message}</p> : \"\"}\r\n            <Button className=\"login__signInBtn\" onClick={login}>\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n          <Button variant=\"primary\" onClick={googleSignup}>\r\n            Sign in with Google\r\n          </Button>\r\n          <SignUp />\r\n        </div>\r\n      ) : (\r\n        <Suspense color=\"white\" size={48} fallback={<BounceLoader loader />}>\r\n          <Dashboard />\r\n        </Suspense>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\SignUpModal.js",["67"],"import Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { useState } from 'react'\r\nimport { auth, db } from '../firebase'\r\nimport Form from 'react-bootstrap/Form'\r\n// import DatePicker from \"react-bootstrap-date-picker\"\r\n\r\nfunction SignUp() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [name, setName] = useState('')\r\n  // const [DOB, setDOB] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const signup = (e) => {\r\n      e.preventDefault()\r\n      auth.createUserWithEmailAndPassword(email, password).then(cred => {\r\n\r\n          // setting additional info to users collection (set overwrites, add pushes)\r\n          // return db.collection('users').doc(user.cred.uid).set({data:data})\r\n          // console.log(cred.user)\r\n          cred.user.updateProfile({\r\n            displayName: name,\r\n          }).then(console.log('done')).catch(err=>console.log(err))\r\n        \r\n      }).catch(err=>alert(err.message))\r\n\r\n    // f().then(o=>{return()}).then(operation)\r\n\r\n      setEmail('')\r\n      setPassword('')\r\n      handleClose()\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Register Now!\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        \r\n        \r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign Up now!</Modal.Title>\r\n        </Modal.Header>\r\n\r\n\r\n        <Modal.Body>\r\n            {/* Woohoo, you're reading this text in a modal! */}\r\n            <Form>\r\n                <Form.Group controlId=\"formGrouptText\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={e => setName(e.target.value)} required/>\r\n                </Form.Group>\r\n                {/* <Form.Group controlId=\"formGrouptText\">\r\n                    <Form.Label>Mobile No.</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter DOB\" value={DOB} onChange={e => setDOB(e.target.value)} required/>\r\n                </Form.Group> */}\r\n                <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} required/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGroupPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" onChange={e => setPassword(e.target.value)} value={password} required/>\r\n                </Form.Group>\r\n            </Form>\r\n        </Modal.Body>\r\n\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n          <Button className=\"login__RegBtn\" onClick={signup}>Register</Button>                    \r\n        </Modal.Footer>\r\n\r\n\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp","C:\\Coding\\Full Stack\\online-tutor\\src\\firebase.js",[],"C:\\Coding\\Full Stack\\online-tutor\\src\\contexts\\ContextProvider.js",[],"C:\\Coding\\Full Stack\\online-tutor\\src\\contexts\\reducer.js",[],"C:\\Coding\\Full Stack\\online-tutor\\src\\components\\Dashboard.js",["68","69"],"import { useEffect, useState, useMemo } from \"react\";\r\nimport { useContextProvider } from \"../contexts/ContextProvider\";\r\nimport { auth, db, storage } from \"../firebase\";\r\nimport \"./Dashboard.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AddMaterial from \"./AddMaterial\";\r\nimport AdminModal from \"./AdminModal\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Dashboard = () => {\r\n  const [{ user }, dispatch] = useContextProvider();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [cnt, setCnt] = useState(0);\r\n  const [updated, setUpdated] = useState(0);\r\n  const [admin, setAdmin] = useState(null);\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [fetchData, setFetchData] = useState(true);\r\n\r\n  const refresh = () => setUpdated(updated + 1);\r\n  // console.log(user)\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      user: null,\r\n    });\r\n    auth.signOut().then(() => console.log(\"You are logged out!\"));\r\n  };\r\n\r\n  const deleteDoc = async (e, item) => {\r\n    e.preventDefault();\r\n\r\n    if (item[0].file_name) {\r\n      const deleteTask = storage\r\n        .ref(\"users/\" + user.uid)\r\n        .child(item[0].file_name);\r\n\r\n      deleteTask\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"File deleted Successfully\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    db.collection(\"files\")\r\n      .doc(item[1].doc_id)\r\n      .delete()\r\n      .then(() => {\r\n        setData(\r\n          data.filter((doc) => {\r\n            return doc[1].doc_id !== item[1].doc_id;\r\n          })\r\n        );\r\n        console.log(\"Document successfully deleted!\", data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  // console.log(data);\r\n  const retrieveMore = async () => {\r\n    try {\r\n      // Set State: Refreshing\r\n      // this.setState({\r\n      //   refreshing: true,\r\n      // });\r\n      console.log(\"Retrieving additional Data\");\r\n      // Cloud Firestore: Query (Additional Query)\r\n      db.collection(\"files\")\r\n        .orderBy(\"timeStamp\", \"desc\")\r\n        .startAfter(lastVisible)\r\n        .limit(3)\r\n        .onSnapshot((snapshot) => {\r\n          const newData = snapshot.docs.map((doc) => {\r\n            setLastVisible(doc);\r\n            return [doc.data(), { doc_id: doc.ref.id }];\r\n          });\r\n          setData([...data, ...newData]);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Try useMemo with data\r\n  // const newData = useMemo(() => {\r\n  // }, [data])\r\n  // console.log(lastVisible);\r\n\r\n  const push_data = (material) => {\r\n    data.unshift(material);\r\n    setData(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    user.getIdTokenResult().then((idTokenResult) => {\r\n      setAdmin(idTokenResult.claims.admin);\r\n    });\r\n\r\n    console.log(\"bruh\");\r\n\r\n    if (fetchData) {\r\n      db.collection(\"files\")\r\n        .orderBy(\"timeStamp\", \"desc\")\r\n        .limit(3)\r\n        .get()\r\n        .then((snapshot) => {\r\n          if (fetchData) {\r\n            console.log(data, \"sussin\");\r\n            setData(\r\n              snapshot.docs.map((doc) => {\r\n                return [doc.data(), { doc_id: doc.ref.id }];\r\n              })\r\n            );\r\n            setLastVisible(snapshot.docs[snapshot.docs.length - 1]);\r\n            setFetchData(false);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err.message));\r\n    }\r\n\r\n    setCnt(cnt + 1);\r\n    // unsubscribe();\r\n  }, [updated, data]);\r\n\r\n  console.log(data);\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Render times: {cnt}</h1>\r\n      <h3>Welcome {user?.displayName?.split(\" \")[0]}</h3>\r\n      {admin ? (\r\n        <div className=\"adminPanel\">\r\n          <h4>You are an admin</h4>\r\n          <div className=\"adminButtons\">\r\n            <AdminModal />\r\n            <AddMaterial\r\n              uid={user.uid}\r\n              push_data={(material) => push_data(material)}\r\n            />\r\n            <Button onClick={refresh}>Load updated data</Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {user ? (\r\n        <div className=\"preview\">\r\n          <h1>Study material</h1>\r\n          {data?.map((item) => (\r\n            <Card\r\n              style={{ width: \"90%\", margin: \"20px auto\" }}\r\n              className=\"container\"\r\n            >\r\n              <Card.Body>\r\n                <Card.Title>{item[0].title || item[0].file_name}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {item[0].description}\r\n                </Card.Subtitle>\r\n                <Card.Text>\r\n                  Some quick example text to build on the card.\r\n                </Card.Text>\r\n                {item[0].file_name ? (\r\n                  <Card.Link href={item[0].url}>{item[0].file_name}</Card.Link>\r\n                ) : null}\r\n                <Card.Link href=\"#\">Another Link</Card.Link>\r\n                <br />\r\n                {admin ? (\r\n                  <Button variant=\"primary\" onClick={(e) => deleteDoc(e, item)}>\r\n                    Delete Material\r\n                  </Button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Button onClick={retrieveMore}>Load More</Button>\r\n\r\n      <Button onClick={logout}>Log out</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Coding\\Full Stack\\online-tutor\\src\\components\\AddMaterial.js",["70"],"C:\\Coding\\Full Stack\\online-tutor\\src\\components\\AdminModal.js",["71","72"],"import Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { useState } from 'react'\r\nimport { auth, db } from '../firebase'\r\nimport Form from 'react-bootstrap/Form'\r\nimport axios from '../axios'\r\n\r\nconst AdminModal = () => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    const [email, setEmail] = useState('')\r\n    const addAdmin = async() => {\r\n        const url = 'api/addAdminRole'\r\n        \r\n        const response = await axios(\r\n            {\r\n                method:'POST',\r\n                url:`${url}`,\r\n                data: {email}\r\n            })\r\n        console.log(response.data)\r\n        // fetch(url, {method:'POST'})\r\n        //     .then(res => res.json())\r\n        //     .then(json => console.log(json))\r\n        //     .catch(function (error) {\r\n        //         console.log('Request failed', error);\r\n        //     });\r\n\r\n\r\n        // const addAdminRole = functions.httpsCallable('addAdminRole')\r\n        // const addAdminRole = fetch('http://localhost:5001/online-tutor-app-c68ab/us-central1/addAdminRole')\r\n        // addAdminRole({email}).then(result => console.log(result))\r\n    }\r\n    return (\r\n        <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Add Admin\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} >\r\n                \r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Make Admin</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group controlId=\"formGrouptType\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter name\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n                \r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button className=\"make_admin\" variant=\"primary\" onClick={addAdmin}>\r\n                        Add\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal.Body>\r\n\r\n\r\n      </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AdminModal\r\n","C:\\Coding\\Full Stack\\online-tutor\\src\\axios.js",[],"C:\\Coding\\Full Stack\\online-tutor\\src\\components\\googleSignup.js",["73","74","75","76","77"],"import firebase from \"firebase\"\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const googleSignup = async() => {\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    await auth\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        console.log(user)\r\n        // ...\r\n    }).catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        var email = error.email;\r\n        var credential = error.credential;\r\n    });\r\n}",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":35,"nodeType":"84","messageId":"85","endLine":3,"endColumn":41},{"ruleId":"82","severity":1,"message":"86","line":3,"column":43,"nodeType":"84","messageId":"85","endLine":3,"endColumn":48},{"ruleId":"82","severity":1,"message":"87","line":18,"column":9,"nodeType":"84","messageId":"85","endLine":18,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":37,"column":6,"nodeType":"90","endLine":37,"endColumn":8,"suggestions":"91"},{"ruleId":"82","severity":1,"message":"92","line":4,"column":16,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"93","line":1,"column":31,"nodeType":"84","messageId":"85","endLine":1,"endColumn":38},{"ruleId":"88","severity":1,"message":"94","line":126,"column":6,"nodeType":"90","endLine":126,"endColumn":21,"suggestions":"95"},{"ruleId":"82","severity":1,"message":"96","line":5,"column":10,"nodeType":"84","messageId":"85","endLine":5,"endColumn":14},{"ruleId":"82","severity":1,"message":"96","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":14},{"ruleId":"82","severity":1,"message":"92","line":4,"column":16,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"97","line":14,"column":13,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},{"ruleId":"82","severity":1,"message":"98","line":20,"column":13,"nodeType":"84","messageId":"85","endLine":20,"endColumn":22},{"ruleId":"82","severity":1,"message":"99","line":21,"column":13,"nodeType":"84","messageId":"85","endLine":21,"endColumn":25},{"ruleId":"82","severity":1,"message":"100","line":22,"column":13,"nodeType":"84","messageId":"85","endLine":22,"endColumn":18},{"ruleId":"82","severity":1,"message":"101","line":23,"column":13,"nodeType":"84","messageId":"85","endLine":23,"endColumn":23},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'db' is defined but never used.","'useMemo' is defined but never used.","React Hook useEffect has missing dependencies: 'cnt', 'fetchData', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setCnt(c => ...)' if you only need 'cnt' in the 'setCnt' call.",["105"],"'auth' is defined but never used.","'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},"Update the dependencies array to be: [updated, data, user, fetchData, cnt]",{"range":"112","text":"113"},[1166,1168],"[dispatch]",[3490,3505],"[updated, data, user, fetchData, cnt]"]